{
  "id": "your-first-app",
  "moduleId": "getting-started",
  "title": "Your First App",
  "content": "<h2>Creating Your First Angular Application</h2><p>Now that you have Angular CLI installed, let's create your first Angular application from scratch. This hands-on approach will give you immediate experience with Angular's project structure and development workflow.</p><h3>Creating a New Project</h3><p>The <code>ng new</code> command creates a complete Angular project with all necessary files, dependencies, and configuration. You'll be prompted to make several choices that customize your project setup.</p><h3>Project Structure Overview</h3><p>Angular projects follow a conventional structure that promotes organization and maintainability:</p><ul><li><strong>src/app/:</strong> Your application code lives here</li><li><strong>src/assets/:</strong> Static assets like images and files</li><li><strong>src/environments/:</strong> Environment-specific configuration</li><li><strong>angular.json:</strong> Angular workspace configuration</li><li><strong>package.json:</strong> Project dependencies and scripts</li><li><strong>tsconfig.json:</strong> TypeScript configuration</li></ul><h3>Development Server</h3><p>Angular CLI includes a development server that:</p><ul><li>Serves your application locally</li><li>Automatically reloads when you make changes</li><li>Provides source maps for debugging</li><li>Shows compilation errors in the browser</li></ul><h3>Your First Component</h3><p>Every Angular application starts with a root component (AppComponent). This component serves as the entry point and can contain other components, creating a component tree.</p><h3>Making Your First Changes</h3><p>Let's customize the default application to understand how Angular works:</p><ul><li>Modify the app component template</li><li>Add component properties</li><li>Use data binding to display dynamic content</li><li>Style your component</li></ul><h3>Understanding the Development Workflow</h3><ol><li><strong>Edit:</strong> Make changes to your component files</li><li><strong>Save:</strong> Angular CLI automatically detects changes</li><li><strong>Reload:</strong> Browser refreshes with your updates</li><li><strong>Debug:</strong> Use browser dev tools to inspect and debug</li></ol><h3>Building for Production</h3><p>When you're ready to deploy your application, Angular CLI can build an optimized version for production with minification, bundling, and other optimizations.</p>",
  "codeExamples": [
    {
      "id": "create-new-project",
      "title": "Create Your First Angular Project",
      "description": "Use Angular CLI to generate a new project with all the necessary files and configuration.",
      "code": "# Create a new Angular project\nng new my-first-app\n\n# CLI will ask several questions:\n# ? Would you like to add Angular routing? (y/N) Y\n# ? Which stylesheet format would you like to use? SCSS\n\n# Navigate to your project directory\ncd my-first-app\n\n# Start the development server\nng serve\n\n# Your app will be available at http://localhost:4200",
      "language": "bash",
      "isEditable": true,
      "explanation": "The ng new command creates a complete Angular project structure. Answer 'Yes' to routing and choose SCSS for styling to get the most common setup.",
      "expectedOutput": "A new Angular project created and running on localhost:4200"
    },
    {
      "id": "app-component-basic",
      "title": "Understanding the App Component",
      "description": "Examine the root component that serves as the entry point for your Angular application.",
      "code": "// src/app/app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-first-app';\n  \n  // Add your own properties\n  welcomeMessage = 'Welcome to Angular!';\n  currentDate = new Date();\n  isVisible = true;\n  \n  // Add methods\n  toggleVisibility() {\n    this.isVisible = !this.isVisible;\n  }\n  \n  getCurrentTime() {\n    return new Date().toLocaleTimeString();\n  }\n}",
      "language": "typescript",
      "isEditable": true,
      "explanation": "The AppComponent class contains properties and methods that can be used in the template. The @Component decorator configures the component with its selector, template, and styles.",
      "expectedOutput": "A component with data properties and methods ready to be used in the template"
    },
    {
      "id": "app-template-basic",
      "title": "Customizing the App Template",
      "description": "Modify the app component template to display your own content using Angular's template syntax.",
      "code": "<!-- src/app/app.component.html -->\n<div class=\"app-container\">\n  <header class=\"app-header\">\n    <h1>{{ title }}</h1>\n    <p>{{ welcomeMessage }}</p>\n  </header>\n  \n  <main class=\"app-content\">\n    <div class=\"info-section\" *ngIf=\"isVisible\">\n      <h2>App Information</h2>\n      <p>Created on: {{ currentDate | date:'fullDate' }}</p>\n      <p>Current time: {{ getCurrentTime() }}</p>\n    </div>\n    \n    <div class=\"controls\">\n      <button (click)=\"toggleVisibility()\" class=\"toggle-btn\">\n        {{ isVisible ? 'Hide' : 'Show' }} Information\n      </button>\n    </div>\n    \n    <div class=\"features\">\n      <h3>What you'll learn:</h3>\n      <ul>\n        <li>Component architecture</li>\n        <li>Data binding and templates</li>\n        <li>Routing and navigation</li>\n        <li>Services and dependency injection</li>\n      </ul>\n    </div>\n  </main>\n  \n  <footer class=\"app-footer\">\n    <p>&copy; 2025 My First Angular App</p>\n  </footer>\n</div>\n\n<!-- Keep the router outlet for navigation -->\n<router-outlet></router-outlet>",
      "language": "html",
      "isEditable": true,
      "explanation": "This template demonstrates key Angular concepts: interpolation ({{ }}), property binding, event binding, structural directives (*ngIf), and pipes for data transformation.",
      "expectedOutput": "A customized homepage with interactive elements and dynamic content"
    },
    {
      "id": "app-styles-basic",
      "title": "Adding Component Styles",
      "description": "Style your component to make it visually appealing and learn about component-scoped CSS.",
      "code": "/* src/app/app.component.scss */\n.app-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.app-header {\n  text-align: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 2rem;\n  border-radius: 10px;\n  margin-bottom: 2rem;\n  \n  h1 {\n    margin: 0 0 1rem 0;\n    font-size: 2.5rem;\n    font-weight: 300;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 1.2rem;\n    opacity: 0.9;\n  }\n}\n\n.app-content {\n  .info-section {\n    background: #f8f9fa;\n    padding: 1.5rem;\n    border-radius: 8px;\n    margin-bottom: 1.5rem;\n    border-left: 4px solid #667eea;\n    \n    h2 {\n      margin-top: 0;\n      color: #333;\n    }\n  }\n  \n  .controls {\n    text-align: center;\n    margin: 1.5rem 0;\n    \n    .toggle-btn {\n      background: #667eea;\n      color: white;\n      border: none;\n      padding: 0.75rem 1.5rem;\n      border-radius: 25px;\n      cursor: pointer;\n      font-size: 1rem;\n      transition: all 0.3s ease;\n      \n      &:hover {\n        background: #5a6fd8;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(102, 126, 234, 0.3);\n      }\n    }\n  }\n  \n  .features {\n    background: white;\n    padding: 1.5rem;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    \n    h3 {\n      color: #333;\n      margin-top: 0;\n    }\n    \n    ul {\n      list-style: none;\n      padding: 0;\n      \n      li {\n        padding: 0.5rem 0;\n        border-bottom: 1px solid #eee;\n        position: relative;\n        padding-left: 1.5rem;\n        \n        &:before {\n          content: 'âœ“';\n          position: absolute;\n          left: 0;\n          color: #28a745;\n          font-weight: bold;\n        }\n        \n        &:last-child {\n          border-bottom: none;\n        }\n      }\n    }\n  }\n}\n\n.app-footer {\n  text-align: center;\n  margin-top: 2rem;\n  padding: 1rem;\n  color: #666;\n  border-top: 1px solid #eee;\n}",
      "language": "scss",
      "isEditable": true,
      "explanation": "Component styles are scoped to the component, preventing CSS conflicts. SCSS provides additional features like nesting, variables, and mixins for more maintainable stylesheets.",
      "expectedOutput": "A beautifully styled Angular application with modern, responsive design"
    },
    {
      "id": "development-commands",
      "title": "Essential Development Commands",
      "description": "Learn the key commands you'll use during Angular development.",
      "code": "# Start development server with hot reload\nng serve\n# App runs at http://localhost:4200\n\n# Serve on different port\nng serve --port 4300\n\n# Serve and open browser automatically\nng serve --open\n\n# Build for production\nng build\n\n# Build and watch for changes\nng build --watch\n\n# Run unit tests\nng test\n\n# Run linting\nng lint\n\n# Generate a new component\nng generate component my-component\n\n# Generate a service\nng generate service my-service\n\n# Get help for any command\nng serve --help",
      "language": "bash",
      "isEditable": true,
      "explanation": "These commands form the core of your Angular development workflow. The development server (ng serve) is your primary tool for testing changes in real-time.",
      "expectedOutput": "Familiarity with essential Angular CLI commands for efficient development"
    }
  ],
  "order": 4,
  "tags": ["application", "hello-world", "project", "cli", "component", "template"],
  "difficulty": "beginner",
  "estimatedTime": "30 min",
  "exercises": [
    {
      "id": "first-app-creation",
      "title": "Build Your First Angular App",
      "description": "Create and customize your first Angular application:",
      "tasks": [
        "Create a new Angular project using ng new",
        "Start the development server and view your app",
        "Modify the AppComponent to add personal information",
        "Add interactive elements like buttons and conditional content",
        "Style your component with SCSS",
        "Experiment with Angular's template syntax (interpolation, event binding)",
        "Build the project for production"
      ],
      "expectedResult": "A working Angular application with custom content, styling, and interactive features"
    },
    {
      "id": "explore-project-structure",
      "title": "Understand Project Structure",
      "description": "Explore the generated project structure:",
      "tasks": [
        "Examine the src/app directory structure",
        "Understand the purpose of angular.json",
        "Look at package.json dependencies",
        "Explore the dist folder after building",
        "Identify where components, services, and modules belong"
      ],
      "expectedResult": "Clear understanding of Angular project organization and file structure"
    }
  ]
}